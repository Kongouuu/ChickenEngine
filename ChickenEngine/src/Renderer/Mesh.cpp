#include "pch.h"
#include "Renderer\Mesh.h"

namespace ChickenEngine
{
    MeshManager& MeshManager::GetInstance()
    {
        static MeshManager instance;
        return instance;
    }

    Mesh MeshManager::GenerateBox()
    {
        Mesh boxMesh;
        boxMesh.layout = EVertexLayout::POS_NORM_COL_TEX;
        boxMesh.vertices = std::vector<Vertex>(24);
       
        // front
        boxMesh.vertices[0]  = Vertex({ -0.5, 0.5, -0.5 }, { 0.0,0.0,-1.0 }, { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 0.0,0.0 }); // left up
        boxMesh.vertices[1]  = Vertex({ 0.5, 0.5, -0.5 },  { 0.0,0.0,-1.0 }, { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 1.0,0.0 });  // right up
        boxMesh.vertices[2]  = Vertex({ -0.5, -0.5, -0.5 },{ 0.0,0.0,-1.0 }, { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 0.0,1.0 }); // left down
        boxMesh.vertices[3]  = Vertex({ 0.5, -0.5, -0.5 }, { 0.0,0.0,-1.0 }, { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 1.0,1.0 }); // right down

        // left
        boxMesh.vertices[4]  = Vertex({ -0.5, 0.5, 0.5 },  { -1.0,0.0,0.0 }, { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 0.0,0.0 });
        boxMesh.vertices[5]  = Vertex({ -0.5, 0.5, -0.5 }, { -1.0,0.0,0.0 }, { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 1.0,0.0 });
        boxMesh.vertices[6]  = Vertex({ -0.5, -0.5, 0.5 }, { -1.0,0.0,0.0 }, { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 0.0,1.0 });
        boxMesh.vertices[7]  = Vertex({ -0.5, -0.5, -0.5 },{ -1.0,0.0,0.0 }, { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 1.0,1.0 });

        // right
        boxMesh.vertices[8]  = Vertex({ 0.5, 0.5, -0.5 },  { 1.0,0.0,0.0 },  { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 0.0,0.0 });
        boxMesh.vertices[9]  = Vertex({ 0.5, 0.5, 0.5 },   { 1.0,0.0,0.0 },  { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 1.0,0.0 });
        boxMesh.vertices[10] = Vertex({ 0.5, -0.5, -0.5 }, { 1.0,0.0,0.0 },  { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 0.0,1.0 });
        boxMesh.vertices[11] = Vertex({ 0.5, -0.5, 0.5 },  { 1.0,0.0,0.0 },  { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 1.0,1.0 });

        // back
        boxMesh.vertices[12] = Vertex({ 0.5, 0.5, -0.5 },  { 0.0,0.0,1.0 },  { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 0.0,0.0 }); 
        boxMesh.vertices[13] = Vertex({ -0.5, 0.5, -0.5 }, { 0.0,0.0,1.0 },  { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 1.0,0.0 }); 
        boxMesh.vertices[14] = Vertex({ 0.5, -0.5, -0.5 }, { 0.0,0.0,1.0 },  { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 0.0,1.0 }); 
        boxMesh.vertices[15] = Vertex({ -0.5, -0.5, -0.5 },{ 0.0,0.0,1.0 },  { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 1.0,1.0 }); 

        // top
        boxMesh.vertices[16] = Vertex({ -0.5, 0.5, 0.5 },  { 0.0,1.0,0.0 },  { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 0.0,0.0 }); 
        boxMesh.vertices[17] = Vertex({ 0.5, 0.5, 0.5 },   { 0.0,1.0,0.0 },  { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 1.0,0.0 });  
        boxMesh.vertices[18] = Vertex({ -0.5, 0.5, -0.5 }, { 0.0,1.0,0.0 },  { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 0.0,1.0 }); 
        boxMesh.vertices[19] = Vertex({ 0.5, 0.5, -0.5 },  { 0.0,1.0,0.0 },  { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 1.0,1.0 });

        // bottom
        boxMesh.vertices[20] = Vertex({ -0.5, -0.5, 0.5 }, { 0.0,-1.0,0.0 }, { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 0.0,0.0 }); 
        boxMesh.vertices[21] = Vertex({ 0.5, -0.5, 0.5 },  { 0.0,-1.0,0.0 }, { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 1.0,0.0 });  
        boxMesh.vertices[22] = Vertex({ -0.5, -0.5, -0.5 },{ 0.0,-1.0,0.0 }, { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 0.0,1.0 }); 
        boxMesh.vertices[23] = Vertex({ 0.5,- 0.5, -0.5 }, { 0.0,-1.0,0.0 }, { 0.0,0.0,0.0 }, { 1.0,1.0,1.0 }, { 1.0,1.0 }); 



        UINT i[36];

        i[0] = 0; i[1] = 1; i[2] = 2;
        i[3] = 0; i[4] = 2; i[5] = 3;

        i[6] = 4; i[7] = 5; i[8] = 6;
        i[9] = 4; i[10] = 6; i[11] = 7;

        i[12] = 8; i[13] = 9; i[14] = 10;
        i[15] = 8; i[16] = 10; i[17] = 11;

        i[18] = 12; i[19] = 13; i[20] = 14;
        i[21] = 12; i[22] = 14; i[23] = 15;

        i[24] = 16; i[25] = 17; i[26] = 18;
        i[27] = 16; i[28] = 18; i[29] = 19;

        i[30] = 20; i[31] = 21; i[32] = 22;
        i[33] = 20; i[34] = 22; i[35] = 23;
        boxMesh.indices.assign(&i[0], &i[36]);

        return boxMesh;
    }

}
